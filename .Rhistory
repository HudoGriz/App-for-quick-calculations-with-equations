spolB <- split(baza2, baza$GE)
names(spolE) <- c(spolE[[1]]$spol[1],spolE[[2]]$spol[1])
names(spolB) <- c(spolB[[1]]$GE[1],spolB[[2]]$GE[1])
x <- 1
loceneEm <- spolE[[x]]
loceneBm <- spolB[[loceneEm$spol[1]]]
spolB[!(spolB %in% loceneEm$spol[1])]
#prikaži samo indirektne enačbe in jim dodaj ID
notD <- na.omit(loceneEm)
#dodeli ID vrsticam, ce tukaj javi napako je en stolpec polnoma prazen
notD$no <- seq.int(nrow(notD))
#izračun BF za indirektne enacbe, ce tukaj javi napako, formule niso prav napisane za indirektne encabe
z=1+ncol(loceneBm)
for (i in notD$no){
loceneBm$eBD <- eval(parse(text=notD$eBD[i]), loceneBm)
loceneBm$eBD <- eval(parse(text=notD$eBF[i]), loceneBm)
names(loceneBm)[z] <- notD$Metoda[i]
z = z+1
}
#prikaži direktne enačbe
D <- loceneEm[rowSums(is.na(loceneEm)) > 0,]
D$no <- seq.int(nrow(D))
#izračunaj direktne enčbe, ce tukaj javi napako formule niso prav napisane za direktne enacbe
z=1+ncol(loceneBm)
for (i in D$no){
loceneBm$eBD <- eval(parse(text=D$eBF[i]), loceneBm)
names(loceneBm)[z] <- D$Metoda[i]
z = z+1
}
#Moški
#razdeli tebelo glede na spol
spolE <- split(enacbe, enacbe$spol)
spolB <- split(baza2, baza$GE)
names(spolE) <- c(spolE[[1]]$spol[1],spolE[[2]]$spol[1])
names(spolB) <- c(spolB[[1]]$GE[1],spolB[[2]]$GE[1])
x <- 1
loceneEm <- spolE[[x]]
loceneBm <- spolB[[loceneEm$spol[1]]]
spolB[!(spolB %in% loceneEm$spol[1])]
#prikaži samo indirektne enačbe in jim dodaj ID
notD <- na.omit(loceneEm)
#dodeli ID vrsticam, ce tukaj javi napako je en stolpec polnoma prazen
notD$no <- seq.int(nrow(notD))
#izračun BF za indirektne enacbe, ce tukaj javi napako, formule niso prav napisane za indirektne encabe
z=1+ncol(loceneBm)
for (i in notD$no){
loceneBm$eBD <- eval(parse(text=notD$eBD[i]), loceneBm)
loceneBm$eBD <- eval(parse(text=notD$eBF[i]), loceneBm)
names(loceneBm)[z] <- notD$Metoda[i]
z = z+1
}
#prikaži direktne enačbe
D <- loceneEm[rowSums(is.na(loceneEm)) > 0,]
D$no <- seq.int(nrow(D))
#izračunaj direktne enčbe, ce tukaj javi napako formule niso prav napisane za direktne enacbe
z=1+ncol(loceneBm)
for (i in D$no){
loceneBm$eBD <- eval(parse(text=D$eBF[i]), loceneBm)
names(loceneBm)[z] <- D$Metoda[i]
z = z+1
}
View(spolB)
#uvozi vse knižnice
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(data.table)
library(dplyr)
#preberi vse tabele
enacbe <- read_excel("enacbe.xlsx")
pretvorbe <- read_excel("pretvorbe.xlsx")
baza <- read_excel("06 podatki urejeno za analizo.xlsx")
enacbe <- enacbe[rowSums(is.na(enacbe)) != ncol(enacbe),]
pretvorbe <- pretvorbe[rowSums(is.na(pretvorbe)) != ncol(pretvorbe),]
baza <- baza[rowSums(is.na(baza)) != ncol(baza),]
#View(enacbe)
#View(pretvorbe)
#View(baza)
#pretvori stara imena v kratice za računanje v fromulah
baza2 = baza
setnames(baza2, old = pretvorbe$ime , new = pretvorbe$kratica)
baza2$no <- seq.int(nrow(baza2))
#View(baza2)
#Moški
#razdeli tebelo glede na spol
spolE <- split(enacbe, enacbe$spol)
spolB <- split(baza2, baza$GE)
names(spolE) <- c(spolE[[1]]$spol[1],spolE[[2]]$spol[1])
names(spolB) <- c(spolB[[1]]$GE[1],spolB[[2]]$GE[1])
x <- 1
loceneEm <- spolE[[x]]
loceneBm <- spolB[[loceneEm$spol[1]]]
spolB <-spolB[!(spolB %in% loceneEm$spol[1])]
#prikaži samo indirektne enačbe in jim dodaj ID
notD <- na.omit(loceneEm)
#dodeli ID vrsticam, ce tukaj javi napako je en stolpec polnoma prazen
notD$no <- seq.int(nrow(notD))
#izračun BF za indirektne enacbe, ce tukaj javi napako, formule niso prav napisane za indirektne encabe
z=1+ncol(loceneBm)
for (i in notD$no){
loceneBm$eBD <- eval(parse(text=notD$eBD[i]), loceneBm)
loceneBm$eBD <- eval(parse(text=notD$eBF[i]), loceneBm)
names(loceneBm)[z] <- notD$Metoda[i]
z = z+1
}
#prikaži direktne enačbe
D <- loceneEm[rowSums(is.na(loceneEm)) > 0,]
D$no <- seq.int(nrow(D))
#izračunaj direktne enčbe, ce tukaj javi napako formule niso prav napisane za direktne enacbe
z=1+ncol(loceneBm)
for (i in D$no){
loceneBm$eBD <- eval(parse(text=D$eBF[i]), loceneBm)
names(loceneBm)[z] <- D$Metoda[i]
z = z+1
}
View(spolB)
#uvozi vse knižnice
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(data.table)
library(dplyr)
#preberi vse tabele
enacbe <- read_excel("enacbe.xlsx")
pretvorbe <- read_excel("pretvorbe.xlsx")
baza <- read_excel("06 podatki urejeno za analizo.xlsx")
enacbe <- enacbe[rowSums(is.na(enacbe)) != ncol(enacbe),]
pretvorbe <- pretvorbe[rowSums(is.na(pretvorbe)) != ncol(pretvorbe),]
baza <- baza[rowSums(is.na(baza)) != ncol(baza),]
#View(enacbe)
#View(pretvorbe)
#View(baza)
#pretvori stara imena v kratice za računanje v fromulah
baza2 = baza
setnames(baza2, old = pretvorbe$ime , new = pretvorbe$kratica)
baza2$no <- seq.int(nrow(baza2))
#View(baza2)
#Moški
#razdeli tebelo glede na spol
spolE <- split(enacbe, enacbe$spol)
spolB <- split(baza2, baza$GE)
names(spolE) <- c(spolE[[1]]$spol[1],spolE[[2]]$spol[1])
names(spolB) <- c(spolB[[1]]$GE[1],spolB[[2]]$GE[1])
spolE <- sort(spolE)
#uvozi vse knižnice
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(data.table)
library(dplyr)
#preberi vse tabele
enacbe <- read_excel("enacbe.xlsx")
pretvorbe <- read_excel("pretvorbe.xlsx")
baza <- read_excel("06 podatki urejeno za analizo.xlsx")
enacbe <- enacbe[rowSums(is.na(enacbe)) != ncol(enacbe),]
pretvorbe <- pretvorbe[rowSums(is.na(pretvorbe)) != ncol(pretvorbe),]
baza <- baza[rowSums(is.na(baza)) != ncol(baza),]
#View(enacbe)
#View(pretvorbe)
#View(baza)
#pretvori stara imena v kratice za računanje v fromulah
baza2 = baza
setnames(baza2, old = pretvorbe$ime , new = pretvorbe$kratica)
baza2$no <- seq.int(nrow(baza2))
#View(baza2)
#Moški
#razdeli tebelo glede na spol
spolE <- split(enacbe, enacbe$spol)
spolB <- split(baza2, baza$GE)
names(spolE) <- c(spolE[[1]]$spol[1],spolE[[2]]$spol[1])
names(spolB) <- c(spolB[[1]]$GE[1],spolB[[2]]$GE[1])
spolE <- sort.list(spolE)
#uvozi vse knižnice
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(data.table)
library(dplyr)
#preberi vse tabele
enacbe <- read_excel("enacbe.xlsx")
pretvorbe <- read_excel("pretvorbe.xlsx")
baza <- read_excel("06 podatki urejeno za analizo.xlsx")
enacbe <- enacbe[rowSums(is.na(enacbe)) != ncol(enacbe),]
pretvorbe <- pretvorbe[rowSums(is.na(pretvorbe)) != ncol(pretvorbe),]
baza <- baza[rowSums(is.na(baza)) != ncol(baza),]
#View(enacbe)
#View(pretvorbe)
#View(baza)
#pretvori stara imena v kratice za računanje v fromulah
baza2 = baza
setnames(baza2, old = pretvorbe$ime , new = pretvorbe$kratica)
baza2$no <- seq.int(nrow(baza2))
#View(baza2)
#Moški
#razdeli tebelo glede na spol
spolE <- split(enacbe, enacbe$spol)
spolB <- split(baza2, baza$GE)
names(spolE) <- c(spolE[[1]]$spol[1],spolE[[2]]$spol[1])
names(spolB) <- c(spolB[[1]]$GE[1],spolB[[2]]$GE[1])
spolE <- order(spolE)
View(spolB)
#uvozi vse knižnice
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(data.table)
library(dplyr)
#preberi vse tabele
enacbe <- read_excel("enacbe.xlsx")
pretvorbe <- read_excel("pretvorbe.xlsx")
baza <- read_excel("06 podatki urejeno za analizo.xlsx")
enacbe <- enacbe[rowSums(is.na(enacbe)) != ncol(enacbe),]
pretvorbe <- pretvorbe[rowSums(is.na(pretvorbe)) != ncol(pretvorbe),]
baza <- baza[rowSums(is.na(baza)) != ncol(baza),]
#View(enacbe)
#View(pretvorbe)
#View(baza)
#pretvori stara imena v kratice za računanje v fromulah
baza2 = baza
setnames(baza2, old = pretvorbe$ime , new = pretvorbe$kratica)
baza2$no <- seq.int(nrow(baza2))
#View(baza2)
#Moški
#razdeli tebelo glede na spol
spolE <- split(enacbe, enacbe$spol)
spolB <- split(baza2, baza$GE)
names(spolE) <- c(spolE[[1]]$spol[1],spolE[[2]]$spol[1])
names(spolB) <- c(spolB[[1]]$GE[1],spolB[[2]]$GE[1])
#spolE <- order(spolE)
x <- 1
loceneEm <- spolE[[x]]
loceneBm <- spolB[[loceneEm$spol[1]]]
#prikaži samo indirektne enačbe in jim dodaj ID
notD <- na.omit(loceneEm)
#dodeli ID vrsticam, ce tukaj javi napako je en stolpec polnoma prazen
notD$no <- seq.int(nrow(notD))
#izračun BF za indirektne enacbe, ce tukaj javi napako, formule niso prav napisane za indirektne encabe
z=1+ncol(loceneBm)
for (i in notD$no){
loceneBm$eBD <- eval(parse(text=notD$eBD[i]), loceneBm)
loceneBm$eBD <- eval(parse(text=notD$eBF[i]), loceneBm)
names(loceneBm)[z] <- notD$Metoda[i]
z = z+1
}
#prikaži direktne enačbe
D <- loceneEm[rowSums(is.na(loceneEm)) > 0,]
D$no <- seq.int(nrow(D))
#izračunaj direktne enčbe, ce tukaj javi napako formule niso prav napisane za direktne enacbe
z=1+ncol(loceneBm)
for (i in D$no){
loceneBm$eBD <- eval(parse(text=D$eBF[i]), loceneBm)
names(loceneBm)[z] <- D$Metoda[i]
z = z+1
}
View(spolE)
View(enacbe)
#uvozi vse knižnice
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(data.table)
library(dplyr)
#preberi vse tabele
enacbe <- read_excel("enacbe.xlsx")
pretvorbe <- read_excel("pretvorbe.xlsx")
baza <- read_excel("06 podatki urejeno za analizo.xlsx")
enacbe <- enacbe[rowSums(is.na(enacbe)) != ncol(enacbe),]
pretvorbe <- pretvorbe[rowSums(is.na(pretvorbe)) != ncol(pretvorbe),]
baza <- baza[rowSums(is.na(baza)) != ncol(baza),]
#View(enacbe)
#View(pretvorbe)
#View(baza)
#pretvori stara imena v kratice za računanje v fromulah
baza2 = baza
setnames(baza2, old = pretvorbe$ime , new = pretvorbe$kratica)
baza2$no <- seq.int(nrow(baza2))
#View(baza2)
#Moški
#razdeli tebelo glede na spol
spolE <- split(enacbe, enacbe$spol)
spolB <- split(baza2, baza$GE)
names(spolE) <- c(spolE[[1]]$spol[1],spolE[[2]]$spol[1])
names(spolB) <- c(spolB[[1]]$GE[1],spolB[[2]]$GE[1])
#spolE <- order(spolE)
x <- 1
loceneEm <- spolE[[x]]
loceneBm <- spolB[[loceneEm$spol[1]]]
drugiSpol <- spolB[[-(loceneEm$spol[1])]]
View(spolB)
View(spolE)
runApp('poskus1')
runApp('poskus1')
runApp('poskus1')
#uvozi vse knižnice
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(data.table)
library(dplyr)
#preberi vse tabele
enacbe <- read_excel("enacbe.xlsx")
pretvorbe <- read_excel("pretvorbe.xlsx")
baza <- read_excel("06 podatki urejeno za analizo.xlsx")
enacbe <- enacbe[rowSums(is.na(enacbe)) != ncol(enacbe),]
pretvorbe <- pretvorbe[rowSums(is.na(pretvorbe)) != ncol(pretvorbe),]
baza <- baza[rowSums(is.na(baza)) != ncol(baza),]
#View(enacbe)
#View(pretvorbe)
#View(baza)
#pretvori stara imena v kratice za računanje v fromulah
baza2 = baza
setnames(baza2, old = pretvorbe$ime , new = pretvorbe$kratica)
baza2$no <- seq.int(nrow(baza2))
#View(baza2)
#Moški
#razdeli tebelo glede na spol
spolE <- split(enacbe, enacbe$spol)
spolB <- split(baza2, baza$GE)
names(spolE) <- c(spolE[[1]]$spol[1],spolE[[2]]$spol[1])
names(spolB) <- c(spolB[[1]]$GE[1],spolB[[2]]$GE[1])
#spolE <- order(spolE)
x <- 1
loceneEm <- spolE[[x]]
loceneBm <- spolB[[loceneEm$spol[1]]]
#prikaži samo indirektne enačbe in jim dodaj ID
notD <- na.omit(loceneEm)
#dodeli ID vrsticam, ce tukaj javi napako je en stolpec polnoma prazen
notD$no <- seq.int(nrow(notD))
#izračun BF za indirektne enacbe, ce tukaj javi napako, formule niso prav napisane za indirektne encabe
z=1+ncol(loceneBm)
for (i in notD$no){
loceneBm$eBD <- eval(parse(text=notD$eBD[i]), loceneBm)
loceneBm$eBD <- eval(parse(text=notD$eBF[i]), loceneBm)
names(loceneBm)[z] <- notD$Metoda[i]
z = z+1
}
#prikaži direktne enačbe
D <- loceneEm[rowSums(is.na(loceneEm)) > 0,]
D$no <- seq.int(nrow(D))
#izračunaj direktne enčbe, ce tukaj javi napako formule niso prav napisane za direktne enacbe
z=1+ncol(loceneBm)
for (i in D$no){
loceneBm$eBD <- eval(parse(text=D$eBF[i]), loceneBm)
names(loceneBm)[z] <- D$Metoda[i]
z = z+1
}
#Ženske
#razdeli tebelo glede na spol
spolEZ <- split(enacbe, enacbe$spol)
spolBZ <- split(baza2, baza$GE)
y <- 1+x
loceneEZ <- spolE[[y]]
loceneBZ <- spolB[[loceneEZ$spol[1]]]
#prikaži samo indirektne enačbe in jim dodaj ID
notD <- na.omit(loceneEZ)
#dodeli ID vrsticam, ce tukaj javi napako je en stolpec polnoma prazen
notD$no <- seq.int(nrow(notD))
#izračun BF za indirektne enacbe, ce tukaj javi napako, formule niso prav napisane za indirektne encabe
z=1+ncol(loceneBZ)
for (i in notD$no){
loceneBZ$eBD <- eval(parse(text=notD$eBD[i]), loceneBZ)
loceneBZ$eBD <- eval(parse(text=notD$eBF[i]), loceneBZ)
names(loceneBZ)[z] <- notD$Metoda[i]
z = z+1
}
#prikaži direktne enačbe
D <- loceneEZ[rowSums(is.na(loceneEZ)) > 0,]
D$no <- seq.int(nrow(D))
#izračunaj direktne enčbe, ce tukaj javi napako formule niso prav napisane za direktne enacbe
z=1+ncol(loceneBZ)
for (i in D$no){
loceneBZ$eBD <- eval(parse(text=D$eBF[i]), loceneBZ)
names(loceneBZ)[z] <- D$Metoda[i]
z = z+1
}
#združi obedve tabeli
#baza3 <- rbind.fill(loceneBm, loceneBŽ)
#loceneBZ <- data.frame(loceneBZ)
tabelaPreracunav <- setNames(data.frame(matrix(ncol = nrow(enacbe)+ncol(baza2), nrow = 0)), c(names(baza2),enacbe$Metoda) )
reunidetd <- list(loceneBm,loceneBZ)
#baza4 <- plyr::ldply(reunidetd, rbind)
baza3 <- dplyr::bind_rows(loceneBm,loceneBZ)
baza1 <-baza3[,-which(names(baza3) == "no")]
#uvozi vse knižnice
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(data.table)
#preberi vse tabele
enacbe <- read_excel("enacbe.xlsx")
pretvorbe <- read_excel("pretvorbe.xlsx")
baza <- read_excel("06 podatki urejeno za analizo.xlsx")
#View(enacbe)
#View(pretvorbe)
#View(baza)
#pretvori stara imena v kratice za računanje v fromulah
baza2 = baza
setnames(baza2, old = pretvorbe$ime , new = pretvorbe$kratica)
#View(baza2)
#prikaži samo indirektne enačbe in jim dodaj ID
notD <- na.omit(enacbe)
#dodeli ID vrsticam, ce tukaj javi napako je en stolpec polnoma prazen
notD$no <- seq.int(nrow(notD))
#View(notD)
#izračun BF za indirektne enacbe, ce tukaj javi napako, formule niso prav napisane za indirektne encabe
z=1+ncol(baza2)
for (i in notD$no){
baza2$eBD <- eval(parse(text=notD$eBD[i]), baza2)
baza2$eBD <- eval(parse(text=notD$eBF[i]), baza2)
names(baza2)[z] <- notD$Metoda[i]
z = z+1
}
#View(baza2)
#prikaži direktne enačbe
D <- enacbe[rowSums(is.na(enacbe)) > 0,]
D$no <- seq.int(nrow(D))
#View(D)
#izračunaj direktne enčbe, ce tukaj javi napako formule niso prav napisane za direktne enacbe
z=1+ncol(baza2)
for (i in D$no){
baza2$eBD <- eval(parse(text=D$eBF[i]), baza2)
names(baza2)[z] <- D$Metoda[i]
z = z+1
}
#uvozi vse knižnice
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(data.table)
library(dplyr)
#preberi vse tabele
enacbe <- read_excel("enacbe.xlsx")
pretvorbe <- read_excel("pretvorbe.xlsx")
baza <- read_excel("06 podatki urejeno za analizo.xlsx")
enacbe <- enacbe[rowSums(is.na(enacbe)) != ncol(enacbe),]
pretvorbe <- pretvorbe[rowSums(is.na(pretvorbe)) != ncol(pretvorbe),]
baza <- baza[rowSums(is.na(baza)) != ncol(baza),]
#View(enacbe)
#View(pretvorbe)
#View(baza)
#pretvori stara imena v kratice za računanje v fromulah
baza2 = baza
setnames(baza2, old = pretvorbe$ime , new = pretvorbe$kratica)
baza2$no <- seq.int(nrow(baza2))
#View(baza2)
#Moški
#razdeli tebelo glede na spol
spolE <- split(enacbe, enacbe$spol)
spolB <- split(baza2, baza$GE)
names(spolE) <- c(spolE[[1]]$spol[1],spolE[[2]]$spol[1])
names(spolB) <- c(spolB[[1]]$GE[1],spolB[[2]]$GE[1])
#spolE <- order(spolE)
x <- 1
loceneEm <- spolE[[x]]
loceneBm <- spolB[[loceneEm$spol[1]]]
#prikaži samo indirektne enačbe in jim dodaj ID
notD <- na.omit(loceneEm)
#dodeli ID vrsticam, ce tukaj javi napako je en stolpec polnoma prazen
notD$no <- seq.int(nrow(notD))
#izračun BF za indirektne enacbe, ce tukaj javi napako, formule niso prav napisane za indirektne encabe
z=1+ncol(loceneBm)
for (i in notD$no){
loceneBm$eBD <- eval(parse(text=notD$eBD[i]), loceneBm)
loceneBm$eBD <- eval(parse(text=notD$eBF[i]), loceneBm)
names(loceneBm)[z] <- notD$Metoda[i]
z = z+1
}
#prikaži direktne enačbe
D <- loceneEm[rowSums(is.na(loceneEm)) > 0,]
D$no <- seq.int(nrow(D))
#izračunaj direktne enčbe, ce tukaj javi napako formule niso prav napisane za direktne enacbe
z=1+ncol(loceneBm)
for (i in D$no){
loceneBm$eBD <- eval(parse(text=D$eBF[i]), loceneBm)
names(loceneBm)[z] <- D$Metoda[i]
z = z+1
}
#Ženske
#razdeli tebelo glede na spol
spolEZ <- split(enacbe, enacbe$spol)
spolBZ <- split(baza2, baza$GE)
y <- 1+x
loceneEZ <- spolE[[y]]
loceneBZ <- spolB[[loceneEZ$spol[1]]]
#prikaži samo indirektne enačbe in jim dodaj ID
notD <- na.omit(loceneEZ)
#dodeli ID vrsticam, ce tukaj javi napako je en stolpec polnoma prazen
notD$no <- seq.int(nrow(notD))
#izračun BF za indirektne enacbe, ce tukaj javi napako, formule niso prav napisane za indirektne encabe
z=1+ncol(loceneBZ)
for (i in notD$no){
loceneBZ$eBD <- eval(parse(text=notD$eBD[i]), loceneBZ)
loceneBZ$eBD <- eval(parse(text=notD$eBF[i]), loceneBZ)
names(loceneBZ)[z] <- notD$Metoda[i]
z = z+1
}
#prikaži direktne enačbe
D <- loceneEZ[rowSums(is.na(loceneEZ)) > 0,]
D$no <- seq.int(nrow(D))
#izračunaj direktne enčbe, ce tukaj javi napako formule niso prav napisane za direktne enacbe
z=1+ncol(loceneBZ)
for (i in D$no){
loceneBZ$eBD <- eval(parse(text=D$eBF[i]), loceneBZ)
names(loceneBZ)[z] <- D$Metoda[i]
z = z+1
}
#združi obedve tabeli
#baza3 <- rbind.fill(loceneBm, loceneBŽ)
#loceneBZ <- data.frame(loceneBZ)
tabelaPreracunav <- setNames(data.frame(matrix(ncol = nrow(enacbe)+ncol(baza2), nrow = 0)), c(names(baza2),enacbe$Metoda) )
reunidetd <- list(loceneBm,loceneBZ)
#baza4 <- plyr::ldply(reunidetd, rbind)
baza3 <- dplyr::bind_rows(loceneBm,loceneBZ)
baza1 <-baza3[,-which(names(baza3) == "no")]
runApp('poskus1')
knitr::opts_chunk$set(echo = TRUE)
library(plotly)
install.packages("plotly")
knitr::opts_chunk$set(echo = TRUE)
library(plotly)
install.packages("plotly")
